[{"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/index.js":"1","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/App.js":"2","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/session.js":"3","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/csrf.js":"4","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/index.js":"5","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/index.js":"6","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormPage/index.js":"7","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/ProfileButton.js":"8","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormPage/index.js":"9","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/context/Modal.js":"10","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/index.js":"11","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/LoginForm.js":"12","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/index.js":"13","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/SignUpForm.js":"14","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/AddItemPage/index.js":"15","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/items.js":"16"},{"size":913,"mtime":1608582403754,"results":"17","hashOfConfig":"18"},{"size":899,"mtime":1608857276635,"results":"19","hashOfConfig":"18"},{"size":1721,"mtime":1608402271550,"results":"20","hashOfConfig":"18"},{"size":1445,"mtime":1608402271550,"results":"21","hashOfConfig":"18"},{"size":730,"mtime":1608916144011,"results":"22","hashOfConfig":"18"},{"size":1485,"mtime":1608857332998,"results":"23","hashOfConfig":"18"},{"size":1569,"mtime":1608402271549,"results":"24","hashOfConfig":"18"},{"size":1096,"mtime":1608402271549,"results":"25","hashOfConfig":"18"},{"size":2122,"mtime":1608581796098,"results":"26","hashOfConfig":"18"},{"size":810,"mtime":1608582403752,"results":"27","hashOfConfig":"18"},{"size":460,"mtime":1608745108440,"results":"28","hashOfConfig":"18"},{"size":1338,"mtime":1608658003905,"results":"29","hashOfConfig":"18"},{"size":464,"mtime":1608745179193,"results":"30","hashOfConfig":"18"},{"size":2278,"mtime":1608657965075,"results":"31","hashOfConfig":"18"},{"size":4001,"mtime":1609029582713,"results":"32","hashOfConfig":"18"},{"size":1733,"mtime":1609029621772,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11taiqi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/index.js",[],["68","69"],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/App.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/session.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/csrf.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormPage/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormPage/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/context/Modal.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/LoginForm.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/SignUpForm.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/AddItemPage/index.js",["70","71","72","73","74"],"import React, { useState, useEffect } from \"react\";\nimport * as itemActions from \"../../store/items\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { Redirect } from \"react-router-dom\";\nimport \"./addItemPage.css\";\n\nfunction AddItemPage() {\n  const dispatch = useDispatch();\n  // const sessionUser = useSelector((state) => state.session.user);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(0.0);\n  const [itemImage, setItemImage] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  // const [credential, setCredential] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  // let imgUploadView;\n\n  // useEffect(() => {\n  //   console.log(`selectedProduct CHANGED TO`, selectedProduct);\n  //   imgUploadView =\n  // }, [itemImage]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n\n    // dispatch(itemActions.addImageUpload(itemImage)).catch((res) => {\n    //   if (res.data && res.data.errors) setErrors(res.data.errors);\n    // });\n\n    return dispatch(\n      itemActions.offerItem({\n        itemName,\n        itemPrice,\n        itemImage,\n        itemDescription,\n      })\n    ).catch((res) => {\n      if (res.data && res.data.errors) setErrors(res.data.errors);\n    });\n\n    // TODO: ADD ERROR HANDLING\n  };\n\n  return (\n    <div className=\"div__container\">\n      <img src={itemImage} />\n      <form action=\"/api/offer-item\">\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          <h3>Item Name</h3>\n          <div>\n            <input\n              className=\"input__box\"\n              type=\"text\"\n              value={itemName}\n              onChange={(e) => setItemName(e.target.value)}\n              required\n            />\n          </div>\n        </label>\n        <label>\n          <h3>Price</h3>\n          <br />\n          <div className=\"div__inline\">\n            <button\n              className=\"button__inline\"\n              onClick={(e) => {\n                e.preventDefault();\n                let newItemPrice = itemPrice > 0 ? itemPrice - 1 : itemPrice;\n                setItemPrice(newItemPrice);\n              }}\n            >\n              -\n            </button>\n            <div className=\"div__price\">\n              <input\n                className=\"input__price\"\n                type=\"number\"\n                min=\"1\"\n                step=\"1\"\n                value={itemPrice}\n                onChange={(e) => setItemPrice(e.target.value)}\n                required\n              />\n            </div>\n            <button\n              className=\"button__inline\"\n              onClick={(e) => {\n                e.preventDefault();\n                let newItemPrice =\n                  itemPrice < 10000 ? itemPrice + 1 : itemPrice;\n                setItemPrice(newItemPrice);\n              }}\n            >\n              +\n            </button>\n          </div>\n        </label>\n        <br />\n        <div>\n          <label>\n            <h3>Upload Image</h3>\n            <div>\n              <input\n                name=\"sampleFile\"\n                type=\"file\"\n                // value={itemImage}\n                // onChange={(e) => setItemImage(e.target.value)}\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                required\n              />\n            </div>\n          </label>\n        </div>\n        <label>\n          <h3>Description</h3>\n          <div>\n            <textarea\n              className=\"input__box\"\n              value={itemDescription}\n              onChange={(e) => setItemDescription(e.target.value)}\n              required\n            />\n          </div>\n        </label>\n        <div>\n          <button className=\"button__full-length\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddItemPage;\n","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/items.js",["75","76","77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"88","line":3,"column":23,"nodeType":"86","messageId":"87","endLine":3,"endColumn":34},{"ruleId":"84","severity":1,"message":"89","line":12,"column":21,"nodeType":"86","messageId":"87","endLine":12,"endColumn":33},{"ruleId":"84","severity":1,"message":"90","line":25,"column":9,"nodeType":"86","messageId":"87","endLine":25,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":49,"column":7,"nodeType":"93","endLine":49,"endColumn":30},{"ruleId":"84","severity":1,"message":"94","line":15,"column":7,"nodeType":"86","messageId":"87","endLine":15,"endColumn":17},{"ruleId":"84","severity":1,"message":"95","line":29,"column":11,"nodeType":"86","messageId":"87","endLine":29,"endColumn":19},{"ruleId":"84","severity":1,"message":"96","line":29,"column":21,"nodeType":"86","messageId":"87","endLine":29,"endColumn":30},{"ruleId":"84","severity":1,"message":"97","line":29,"column":32,"nodeType":"86","messageId":"87","endLine":29,"endColumn":41},{"ruleId":"84","severity":1,"message":"98","line":29,"column":43,"nodeType":"86","messageId":"87","endLine":29,"endColumn":58},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'setItemImage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'removeItem' is assigned a value but never used.","'itemName' is assigned a value but never used.","'itemPrice' is assigned a value but never used.","'itemImage' is assigned a value but never used.","'itemDescription' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]