[{"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/index.js":"1","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/App.js":"2","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/session.js":"3","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/csrf.js":"4","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/index.js":"5","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/index.js":"6","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormPage/index.js":"7","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/ProfileButton.js":"8","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormPage/index.js":"9","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/context/Modal.js":"10","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/index.js":"11","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/LoginForm.js":"12","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/index.js":"13","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/SignUpForm.js":"14","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/items.js":"15","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/UploadImage/index.js":"16","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/AddItemPage/index.js":"17","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Home/index.js":"18"},{"size":913,"mtime":1608582403754,"results":"19","hashOfConfig":"20"},{"size":1070,"mtime":1609288967984,"results":"21","hashOfConfig":"20"},{"size":1849,"mtime":1609289891481,"results":"22","hashOfConfig":"20"},{"size":1451,"mtime":1609289452401,"results":"23","hashOfConfig":"20"},{"size":730,"mtime":1609265610243,"results":"24","hashOfConfig":"20"},{"size":1416,"mtime":1609268024178,"results":"25","hashOfConfig":"20"},{"size":1569,"mtime":1608402271549,"results":"26","hashOfConfig":"20"},{"size":1096,"mtime":1608402271549,"results":"27","hashOfConfig":"20"},{"size":2122,"mtime":1608581796098,"results":"28","hashOfConfig":"20"},{"size":810,"mtime":1608582403752,"results":"29","hashOfConfig":"20"},{"size":460,"mtime":1608745108440,"results":"30","hashOfConfig":"20"},{"size":1338,"mtime":1608658003905,"results":"31","hashOfConfig":"20"},{"size":464,"mtime":1608745179193,"results":"32","hashOfConfig":"20"},{"size":2278,"mtime":1608657965075,"results":"33","hashOfConfig":"20"},{"size":1643,"mtime":1609287160857,"results":"34","hashOfConfig":"20"},{"size":2418,"mtime":1609265610241,"results":"35","hashOfConfig":"20"},{"size":3764,"mtime":1609288790350,"results":"36","hashOfConfig":"20"},{"size":137,"mtime":1609289050555,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"11taiqi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/index.js",[],["78","79"],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/App.js",["80"],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/session.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/csrf.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormPage/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormPage/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/context/Modal.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/LoginFormModal/LoginForm.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/index.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/SignUpFormModal/SignUpForm.js",[],"/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/store/items.js",["81","82"],"import { fetch } from \"./csrf\";\n\nconst SET_ITEM = \"items/setItem\";\nconst REMOVE_ITEM = \"session/removeItem\";\nconst UPLOAD_IMAGE = \"offer-item/upload\";\n\nconst setItem = (item) => {\n  // this is a POJO action creator\n  return {\n    type: SET_ITEM,\n    payload: item,\n  };\n};\n\nconst removeItem = () => {\n  return {\n    type: REMOVE_ITEM,\n  };\n};\n\nexport const offerItem = (item) => async (dispatch) => {\n  const {\n    itemName,\n    itemPrice,\n    itemImage,\n    itemDescription,\n    userId,\n    itemImages,\n  } = item;\n\n  const formData = new FormData();\n  formData.append(\"itemName\", itemName);\n  formData.append(\"itemPrice\", itemPrice);\n  formData.append(\"itemDescription\", itemDescription);\n  formData.append(\"userId\", userId);\n\n  // for multiple files\n  if (itemImages && itemImages.length !== 0) {\n    for (var i = 0; i < itemImages.length; i++) {\n      formData.append(\"images\", itemImages[i]);\n    }\n  }\n\n  // for single file\n  if (itemImage) formData.append(\"image\", itemImage);\n\n  const response = await fetch(`/api/offer-item/`, {\n    method: \"POST\",\n    body: formData,\n  });\n\n  dispatch(setItem(response.data.item));\n  // console.log(\"response data item\", response.data.item);\n  // return response;\n};\n\nconst initialState = {};\n\nconst itemReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ITEM:\n      newState = Object.assign({}, state);\n      newState.item = action.payload;\n      return newState;\n    case REMOVE_ITEM:\n      newState = Object.assign({}, state);\n      newState.item = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;\n","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/UploadImage/index.js",["83","84","85","86","87","88","89"],"import React, { useState, useEffect } from \"react\";\nimport * as itemActions from \"../../store/items\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./uploadImagePage.css\";\n// import { Redirect } from \"react-router-dom\";\nimport { fetch } from \"../../store/csrf\";\n\nfunction UploadImagePage() {\n  const dispatch = useDispatch();\n  // const sessionUser = useSelector((state) => state.session.user);\n  const [itemImage, setItemImage] = useState(\"\");\n  // const [itemDescription, setItemDescription] = useState(\"\");\n  // const [credential, setCredential] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  // let imgUploadView;\n\n  // useEffect(() => {\n  //   console.log(`selectedProduct CHANGED TO`, selectedProduct);\n  //   imgUploadView =\n  // }, [itemImage]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const files = event.target.files;\n    console.log(files);\n  };\n\n  const handleImageUpload = async (event) => {\n    const files = event.target.files;\n    const formData = new FormData();\n    formData.append(\"myFile\", files[0]);\n    await fetch(\"/api/offer-item/upload\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.path);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    console.log(\"formData\", formData);\n  };\n\n  return (\n    <div className=\"div__container\">\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\" method=\"POST\">\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <div>\n          <img src={itemImage ? URL.createObjectURL(itemImage) : null} />\n          <br />\n          <label>\n            <h3>Upload Image</h3>\n            <div>\n              <input\n                name=\"sampleFile\"\n                type=\"file\"\n                onChange={handleImageUpload}\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                required\n              />\n            </div>\n          </label>\n        </div>\n\n        <div>\n          <button className=\"button__full-length\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default UploadImagePage;\n","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/AddItemPage/index.js",["90","91"],"import React, { useState, useEffect } from \"react\";\nimport * as itemActions from \"../../store/items\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { Redirect } from \"react-router-dom\";\nimport \"./addItemPage.css\";\n\nfunction AddItemPage() {\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const dispatch = useDispatch();\n  \n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(0.0);\n  const [itemImage, setItemImage] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  // TO DO: MAKE SO FORM ONLY WORKS WHEN LOGGED IN\n  let userId;\n\n  if (!sessionUser) {\n    userId = 1;\n  } else {\n    userId = sessionUser.id;\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors([]);\n    dispatch(\n      itemActions.offerItem({\n        itemName,\n        itemPrice,\n        itemDescription,\n        userId,\n        itemImage,\n      })\n    );\n    setItemName(\"\");\n    setItemPrice(0);\n    setItemImage(null);\n    setItemDescription(\"\");\n    e.target.value = null;\n  };\n\n  return (\n    <div className=\"div__container\">\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          <h3>Item Name</h3>\n          <div>\n            <input\n              className=\"input__box\"\n              type=\"text\"\n              value={itemName}\n              onChange={(e) => setItemName(e.target.value)}\n              required\n            />\n          </div>\n        </label>\n        <label>\n          <h3>Price</h3>\n          <br />\n          <div className=\"div__inline\">\n            <button\n              className=\"button__inline\"\n              onClick={(e) => {\n                e.preventDefault();\n                let newItemPrice = itemPrice > 0 ? itemPrice - 1 : itemPrice;\n                setItemPrice(newItemPrice);\n              }}\n            >\n              -\n            </button>\n            <div className=\"div__price\">\n              <input\n                className=\"input__price\"\n                type=\"number\"\n                min=\"0\"\n                step=\"1\"\n                value={itemPrice}\n                onChange={(e) => setItemPrice(e.target.value)}\n                required\n              />\n            </div>\n            <button\n              className=\"button__inline\"\n              onClick={(e) => {\n                e.preventDefault();\n                let newItemPrice =\n                  itemPrice < 10000 ? itemPrice + 1 : itemPrice;\n                setItemPrice(newItemPrice);\n              }}\n            >\n              +\n            </button>\n          </div>\n        </label>\n        <br />\n        <div>\n          <img src={itemImage ? URL.createObjectURL(itemImage) : null} />\n          <br />\n          <label>\n            <h3>Upload Image</h3>\n            <div>\n              <input\n                name=\"sampleFile\"\n                type=\"file\"\n                onChange={(e) => setItemImage(e.target.files[0])}\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                required\n              />\n            </div>\n          </label>\n        </div>\n        <label>\n          <h3>Description</h3>\n          <div>\n            <textarea\n              className=\"input__box\"\n              value={itemDescription}\n              onChange={(e) => setItemDescription(e.target.value)}\n              required\n            />\n          </div>\n        </label>\n        <div>\n          <button className=\"button__full-length\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddItemPage;\n","/Users/adott/Documents/PROJECTS/aA/GreenGrab/frontend/src/components/Home/index.js",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":5,"column":7,"nodeType":"99","messageId":"100","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":15,"column":7,"nodeType":"99","messageId":"100","endLine":15,"endColumn":17},{"ruleId":"97","severity":1,"message":"103","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"104","line":2,"column":13,"nodeType":"99","messageId":"100","endLine":2,"endColumn":24},{"ruleId":"97","severity":1,"message":"105","line":3,"column":23,"nodeType":"99","messageId":"100","endLine":3,"endColumn":34},{"ruleId":"97","severity":1,"message":"106","line":9,"column":9,"nodeType":"99","messageId":"100","endLine":9,"endColumn":17},{"ruleId":"97","severity":1,"message":"107","line":11,"column":21,"nodeType":"99","messageId":"100","endLine":11,"endColumn":33},{"ruleId":"97","severity":1,"message":"108","line":15,"column":18,"nodeType":"99","messageId":"100","endLine":15,"endColumn":27},{"ruleId":"109","severity":1,"message":"110","line":59,"column":11,"nodeType":"111","endLine":59,"endColumn":74},{"ruleId":"97","severity":1,"message":"103","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":106,"column":11,"nodeType":"111","endLine":106,"endColumn":74},{"ruleId":"97","severity":1,"message":"112","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'UploadImage' is defined but never used.","Identifier","unusedVar","'UPLOAD_IMAGE' is assigned a value but never used.","'removeItem' is assigned a value but never used.","'useEffect' is defined but never used.","'itemActions' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","'setItemImage' is assigned a value but never used.","'setErrors' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]